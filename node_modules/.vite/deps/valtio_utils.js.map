{
  "version": 3,
  "sources": ["../../derive-valtio/src/derive.ts", "../../valtio/esm/vanilla/utils.mjs", "../../valtio/esm/react/utils.mjs"],
  "sourcesContent": ["import { getVersion, proxy, subscribe } from 'valtio/vanilla'\n\ntype DeriveGet = <T extends object>(proxyObject: T) => T\n\ntype Subscription = {\n  s: object // \"s\"ourceObject\n  d: object // \"d\"erivedObject\n  k: string // derived \"k\"ey\n  c: () => void // \"c\"allback\n  n: boolean // \"n\"otifyInSync\n  i: string[] // \"i\"goringKeys\n  p?: Promise<void> // \"p\"romise\n}\n\ntype SourceObjectEntry = [\n  subscriptions: Set<Subscription>,\n  unsubscribe: () => void,\n  pendingCount: number,\n  pendingCallbacks: Set<() => void>,\n]\n\ntype DerivedObjectEntry = [subscriptions: Set<Subscription>]\n\nconst sourceObjectMap = new WeakMap<object, SourceObjectEntry>()\nconst derivedObjectMap = new WeakMap<object, DerivedObjectEntry>()\n\nconst markPending = (sourceObject: object, callback?: () => void) => {\n  const sourceObjectEntry = sourceObjectMap.get(sourceObject)\n  if (sourceObjectEntry) {\n    sourceObjectEntry[0].forEach((subscription) => {\n      const { d: derivedObject } = subscription\n      if (sourceObject !== derivedObject) {\n        markPending(derivedObject)\n      }\n    })\n    ++sourceObjectEntry[2] // pendingCount\n    if (callback) {\n      sourceObjectEntry[3].add(callback) // pendingCallbacks\n    }\n  }\n}\n\n// has side effect (even though used in Array.map)\nconst checkPending = (sourceObject: object, callback: () => void) => {\n  const sourceObjectEntry = sourceObjectMap.get(sourceObject)\n  if (sourceObjectEntry?.[2]) {\n    sourceObjectEntry[3].add(callback) // pendingCallbacks\n    return true\n  }\n  return false\n}\n\nconst unmarkPending = (sourceObject: object) => {\n  const sourceObjectEntry = sourceObjectMap.get(sourceObject)\n  if (sourceObjectEntry) {\n    --sourceObjectEntry[2] // pendingCount\n    if (!sourceObjectEntry[2]) {\n      sourceObjectEntry[3].forEach((callback) => callback())\n      sourceObjectEntry[3].clear() // pendingCallbacks\n    }\n    sourceObjectEntry[0].forEach((subscription) => {\n      const { d: derivedObject } = subscription\n      if (sourceObject !== derivedObject) {\n        unmarkPending(derivedObject)\n      }\n    })\n  }\n}\n\nconst addSubscription = (subscription: Subscription) => {\n  const { s: sourceObject, d: derivedObject } = subscription\n  let derivedObjectEntry = derivedObjectMap.get(derivedObject)\n  if (!derivedObjectEntry) {\n    derivedObjectEntry = [new Set()]\n    derivedObjectMap.set(subscription.d, derivedObjectEntry)\n  }\n  derivedObjectEntry[0].add(subscription)\n  let sourceObjectEntry = sourceObjectMap.get(sourceObject)\n  if (!sourceObjectEntry) {\n    const subscriptions = new Set<Subscription>()\n    const unsubscribe = subscribe(\n      sourceObject,\n      (ops) => {\n        subscriptions.forEach((subscription) => {\n          const {\n            d: derivedObject,\n            c: callback,\n            n: notifyInSync,\n            i: ignoreKeys,\n          } = subscription\n          if (\n            sourceObject === derivedObject &&\n            ops.every(\n              (op) =>\n                op[1].length === 1 && ignoreKeys.includes(op[1][0] as string)\n            )\n          ) {\n            // only setting derived properties\n            return\n          }\n          if (subscription.p) {\n            // already scheduled\n            return\n          }\n          markPending(sourceObject, callback)\n          if (notifyInSync) {\n            unmarkPending(sourceObject)\n          } else {\n            subscription.p = Promise.resolve().then(() => {\n              delete subscription.p // promise\n              unmarkPending(sourceObject)\n            })\n          }\n        })\n      },\n      true\n    )\n    sourceObjectEntry = [subscriptions, unsubscribe, 0, new Set()]\n    sourceObjectMap.set(sourceObject, sourceObjectEntry)\n  }\n  sourceObjectEntry[0].add(subscription)\n}\n\nconst removeSubscription = (subscription: Subscription) => {\n  const { s: sourceObject, d: derivedObject } = subscription\n  const derivedObjectEntry = derivedObjectMap.get(derivedObject)\n  derivedObjectEntry?.[0].delete(subscription)\n  if (derivedObjectEntry?.[0].size === 0) {\n    derivedObjectMap.delete(derivedObject)\n  }\n  const sourceObjectEntry = sourceObjectMap.get(sourceObject)\n  if (sourceObjectEntry) {\n    const [subscriptions, unsubscribe] = sourceObjectEntry\n    subscriptions.delete(subscription)\n    if (!subscriptions.size) {\n      unsubscribe()\n      sourceObjectMap.delete(sourceObject)\n    }\n  }\n}\n\nconst listSubscriptions = (derivedObject: object) => {\n  const derivedObjectEntry = derivedObjectMap.get(derivedObject)\n  if (derivedObjectEntry) {\n    return Array.from(derivedObjectEntry[0]) // NOTE do we need to copy?\n  }\n  return []\n}\n\n// NOTE This is experimentally exported.\n// The availability is not guaranteed, and it will be renamed,\n// changed or removed without any notice in future versions.\n// It's not expected to use this in production.\nexport const unstable_deriveSubscriptions = {\n  add: addSubscription,\n  remove: removeSubscription,\n  list: listSubscriptions,\n}\n\n/**\n * derive\n *\n * This creates derived properties and attaches them\n * to a new proxy object or an existing proxy object.\n *\n * @example\n * import { proxy } from 'valtio'\n * import { derive } from 'valtio/utils'\n *\n * const state = proxy({\n *   count: 1,\n * })\n *\n * const derivedState = derive({\n *   doubled: (get) => get(state).count * 2,\n * })\n *\n * derive({\n *   tripled: (get) => get(state).count * 3,\n * }, {\n *   proxy: state,\n * })\n */\nexport function derive<T extends object, U extends object>(\n  derivedFns: {\n    [K in keyof U]: (get: DeriveGet) => U[K]\n  },\n  options?: {\n    proxy?: T\n    sync?: boolean\n  }\n) {\n  const proxyObject = (options?.proxy || proxy({})) as U\n  const notifyInSync = !!options?.sync\n  const derivedKeys = Object.keys(derivedFns)\n  derivedKeys.forEach((key) => {\n    if (Object.getOwnPropertyDescriptor(proxyObject, key)) {\n      throw new Error('object property already defined')\n    }\n    const fn = derivedFns[key as keyof U]\n    type DependencyEntry = {\n      v: number // \"v\"ersion\n      s?: Subscription // \"s\"ubscription\n    }\n    let lastDependencies: Map<object, DependencyEntry> | null = null\n    const evaluate = () => {\n      if (lastDependencies) {\n        if (\n          Array.from(lastDependencies)\n            .map(([p]) => checkPending(p, evaluate))\n            .some((isPending) => isPending)\n        ) {\n          // some dependencies are pending\n          return\n        }\n        if (\n          Array.from(lastDependencies).every(\n            ([p, entry]) => getVersion(p) === entry.v\n          )\n        ) {\n          // no dependencies are changed\n          return\n        }\n      }\n      const dependencies = new Map<object, DependencyEntry>()\n      const get = <P extends object>(p: P) => {\n        dependencies.set(p, { v: getVersion(p) as number })\n        return p\n      }\n      const value = fn(get)\n      const subscribeToDependencies = () => {\n        dependencies.forEach((entry, p) => {\n          const lastSubscription = lastDependencies?.get(p)?.s\n          if (lastSubscription) {\n            entry.s = lastSubscription\n          } else {\n            const subscription: Subscription = {\n              s: p, // sourceObject\n              d: proxyObject, // derivedObject\n              k: key, // derived key\n              c: evaluate, // callback\n              n: notifyInSync,\n              i: derivedKeys, // ignoringKeys\n            }\n            addSubscription(subscription)\n            entry.s = subscription\n          }\n        })\n        lastDependencies?.forEach((entry, p) => {\n          if (!dependencies.has(p) && entry.s) {\n            removeSubscription(entry.s)\n          }\n        })\n        lastDependencies = dependencies\n      }\n      if ((value as unknown) instanceof Promise) {\n        ;(value as Promise<unknown>).finally(subscribeToDependencies)\n      } else {\n        subscribeToDependencies()\n      }\n      proxyObject[key as keyof U] = value\n    }\n    evaluate()\n  })\n  return proxyObject as T & U\n}\n\n/**\n * underive\n *\n * This stops derived properties to evaluate.\n * It will stop all (or specified by `keys` option) subscriptions.\n * If you specify `delete` option, it will delete the properties\n * and you can attach new derived properties.\n *\n * @example\n * import { proxy } from 'valtio'\n * import { derive, underive } from 'valtio/utils'\n *\n * const state = proxy({\n *   count: 1,\n * })\n *\n * const derivedState = derive({\n *   doubled: (get) => get(state).count * 2,\n * })\n *\n * underive(derivedState)\n */\nexport function underive<T extends object, U extends object>(\n  proxyObject: T & U,\n  options?: {\n    delete?: boolean\n    keys?: (keyof U)[]\n  }\n) {\n  const keysToDelete = options?.delete ? new Set<keyof U>() : null\n  listSubscriptions(proxyObject).forEach((subscription) => {\n    const { k: key } = subscription\n    if (!options?.keys || options.keys.includes(key as keyof U)) {\n      removeSubscription(subscription)\n      if (keysToDelete) {\n        keysToDelete.add(key as keyof U)\n      }\n    }\n  })\n  if (keysToDelete) {\n    keysToDelete.forEach((key) => {\n      delete proxyObject[key]\n    })\n  }\n}\n", "import { subscribe, snapshot, proxy, ref, unstable_buildProxyFunction } from 'valtio/vanilla';\nimport { derive } from 'derive-valtio';\nexport { derive, underive, unstable_deriveSubscriptions } from 'derive-valtio';\n\nfunction subscribeKey(proxyObject, key, callback, notifyInSync) {\n  let prevValue = proxyObject[key];\n  return subscribe(\n    proxyObject,\n    () => {\n      const nextValue = proxyObject[key];\n      if (!Object.is(prevValue, nextValue)) {\n        callback(prevValue = nextValue);\n      }\n    },\n    notifyInSync\n  );\n}\n\nlet currentCleanups;\nfunction watch(callback, options) {\n  let alive = true;\n  const cleanups = /* @__PURE__ */ new Set();\n  const subscriptions = /* @__PURE__ */ new Map();\n  const cleanup = () => {\n    if (alive) {\n      alive = false;\n      cleanups.forEach((clean) => clean());\n      cleanups.clear();\n      subscriptions.forEach((unsubscribe) => unsubscribe());\n      subscriptions.clear();\n    }\n  };\n  const revalidate = async () => {\n    if (!alive) {\n      return;\n    }\n    cleanups.forEach((clean) => clean());\n    cleanups.clear();\n    const proxiesToSubscribe = /* @__PURE__ */ new Set();\n    const parent = currentCleanups;\n    currentCleanups = cleanups;\n    try {\n      const promiseOrPossibleCleanup = callback((proxyObject) => {\n        proxiesToSubscribe.add(proxyObject);\n        if (alive && !subscriptions.has(proxyObject)) {\n          const unsubscribe = subscribe(proxyObject, revalidate, options == null ? void 0 : options.sync);\n          subscriptions.set(proxyObject, unsubscribe);\n        }\n        return proxyObject;\n      });\n      const couldBeCleanup = promiseOrPossibleCleanup && promiseOrPossibleCleanup instanceof Promise ? await promiseOrPossibleCleanup : promiseOrPossibleCleanup;\n      if (couldBeCleanup) {\n        if (alive) {\n          cleanups.add(couldBeCleanup);\n        } else {\n          cleanup();\n        }\n      }\n    } finally {\n      currentCleanups = parent;\n    }\n    subscriptions.forEach((unsubscribe, proxyObject) => {\n      if (!proxiesToSubscribe.has(proxyObject)) {\n        subscriptions.delete(proxyObject);\n        unsubscribe();\n      }\n    });\n  };\n  if (currentCleanups) {\n    currentCleanups.add(cleanup);\n  }\n  revalidate();\n  return cleanup;\n}\n\nconst DEVTOOLS = Symbol();\nfunction devtools(proxyObject, options) {\n  if (typeof options === \"string\") {\n    console.warn(\n      \"string name option is deprecated, use { name }. https://github.com/pmndrs/valtio/pull/400\"\n    );\n    options = { name: options };\n  }\n  const { enabled, name = \"\", ...rest } = options || {};\n  let extension;\n  try {\n    extension = (enabled != null ? enabled : (import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") && window.__REDUX_DEVTOOLS_EXTENSION__;\n  } catch (e) {\n  }\n  if (!extension) {\n    if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && enabled) {\n      console.warn(\"[Warning] Please install/enable Redux devtools extension\");\n    }\n    return;\n  }\n  let isTimeTraveling = false;\n  const devtools2 = extension.connect({ name, ...rest });\n  const unsub1 = subscribe(proxyObject, (ops) => {\n    const action = ops.filter(([_, path]) => path[0] !== DEVTOOLS).map(([op, path]) => `${op}:${path.map(String).join(\".\")}`).join(\", \");\n    if (!action) {\n      return;\n    }\n    if (isTimeTraveling) {\n      isTimeTraveling = false;\n    } else {\n      const snapWithoutDevtools = Object.assign({}, snapshot(proxyObject));\n      delete snapWithoutDevtools[DEVTOOLS];\n      devtools2.send(\n        {\n          type: action,\n          updatedAt: (/* @__PURE__ */ new Date()).toLocaleString()\n        },\n        snapWithoutDevtools\n      );\n    }\n  });\n  const unsub2 = devtools2.subscribe((message) => {\n    var _a, _b, _c, _d, _e, _f;\n    if (message.type === \"ACTION\" && message.payload) {\n      try {\n        Object.assign(proxyObject, JSON.parse(message.payload));\n      } catch (e) {\n        console.error(\n          \"please dispatch a serializable value that JSON.parse() and proxy() support\\n\",\n          e\n        );\n      }\n    }\n    if (message.type === \"DISPATCH\" && message.state) {\n      if (((_a = message.payload) == null ? void 0 : _a.type) === \"JUMP_TO_ACTION\" || ((_b = message.payload) == null ? void 0 : _b.type) === \"JUMP_TO_STATE\") {\n        isTimeTraveling = true;\n        const state = JSON.parse(message.state);\n        Object.assign(proxyObject, state);\n      }\n      proxyObject[DEVTOOLS] = message;\n    } else if (message.type === \"DISPATCH\" && ((_c = message.payload) == null ? void 0 : _c.type) === \"COMMIT\") {\n      devtools2.init(snapshot(proxyObject));\n    } else if (message.type === \"DISPATCH\" && ((_d = message.payload) == null ? void 0 : _d.type) === \"IMPORT_STATE\") {\n      const actions = (_e = message.payload.nextLiftedState) == null ? void 0 : _e.actionsById;\n      const computedStates = ((_f = message.payload.nextLiftedState) == null ? void 0 : _f.computedStates) || [];\n      isTimeTraveling = true;\n      computedStates.forEach(({ state }, index) => {\n        const action = actions[index] || \"No action found\";\n        Object.assign(proxyObject, state);\n        if (index === 0) {\n          devtools2.init(snapshot(proxyObject));\n        } else {\n          devtools2.send(action, snapshot(proxyObject));\n        }\n      });\n    }\n  });\n  devtools2.init(snapshot(proxyObject));\n  return () => {\n    unsub1();\n    unsub2 == null ? void 0 : unsub2();\n  };\n}\n\nfunction addComputed_DEPRECATED(proxyObject, computedFns_FAKE, targetObject = proxyObject) {\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n    console.warn(\n      \"addComputed is deprecated. Please consider using `derive`. Falling back to emulation with derive. https://github.com/pmndrs/valtio/pull/201\"\n    );\n  }\n  const derivedFns = {};\n  Object.keys(computedFns_FAKE).forEach((key) => {\n    derivedFns[key] = (get) => computedFns_FAKE[key](get(proxyObject));\n  });\n  return derive(derivedFns, { proxy: targetObject });\n}\n\nfunction proxyWithComputed_DEPRECATED(initialObject, computedFns) {\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n    console.warn(\n      'proxyWithComputed is deprecated. Please follow \"Computed Properties\" guide in docs.'\n    );\n  }\n  Object.keys(computedFns).forEach((key) => {\n    if (Object.getOwnPropertyDescriptor(initialObject, key)) {\n      throw new Error(\"object property already defined\");\n    }\n    const computedFn = computedFns[key];\n    const { get, set } = typeof computedFn === \"function\" ? { get: computedFn } : computedFn;\n    const desc = {};\n    desc.get = () => get(snapshot(proxyObject));\n    if (set) {\n      desc.set = (newValue) => set(proxyObject, newValue);\n    }\n    Object.defineProperty(initialObject, key, desc);\n  });\n  const proxyObject = proxy(initialObject);\n  return proxyObject;\n}\n\nconst isObject = (x) => typeof x === \"object\" && x !== null;\nlet refSet;\nconst deepClone = (obj) => {\n  if (!refSet) {\n    refSet = unstable_buildProxyFunction()[2];\n  }\n  if (!isObject(obj) || refSet.has(obj)) {\n    return obj;\n  }\n  const baseObject = Array.isArray(obj) ? [] : Object.create(Object.getPrototypeOf(obj));\n  Reflect.ownKeys(obj).forEach((key) => {\n    baseObject[key] = deepClone(obj[key]);\n  });\n  return baseObject;\n};\nfunction proxyWithHistory_DEPRECATED(initialValue, skipSubscribe = false) {\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n    console.warn(\n      'proxyWithHistory is deprecated. Please use the \"valtio-history\" package; refer to the docs'\n    );\n  }\n  const proxyObject = proxy({\n    value: initialValue,\n    history: ref({\n      wip: void 0,\n      // to avoid infinite loop\n      snapshots: [],\n      index: -1\n    }),\n    clone: deepClone,\n    canUndo: () => proxyObject.history.index > 0,\n    undo: () => {\n      if (proxyObject.canUndo()) {\n        proxyObject.value = proxyObject.history.wip = proxyObject.clone(\n          proxyObject.history.snapshots[--proxyObject.history.index]\n        );\n      }\n    },\n    canRedo: () => proxyObject.history.index < proxyObject.history.snapshots.length - 1,\n    redo: () => {\n      if (proxyObject.canRedo()) {\n        proxyObject.value = proxyObject.history.wip = proxyObject.clone(\n          proxyObject.history.snapshots[++proxyObject.history.index]\n        );\n      }\n    },\n    saveHistory: () => {\n      proxyObject.history.snapshots.splice(proxyObject.history.index + 1);\n      proxyObject.history.snapshots.push(snapshot(proxyObject).value);\n      ++proxyObject.history.index;\n    },\n    subscribe: () => subscribe(proxyObject, (ops) => {\n      if (ops.every(\n        (op) => op[1][0] === \"value\" && (op[0] !== \"set\" || op[2] !== proxyObject.history.wip)\n      )) {\n        proxyObject.saveHistory();\n      }\n    })\n  });\n  proxyObject.saveHistory();\n  if (!skipSubscribe) {\n    proxyObject.subscribe();\n  }\n  return proxyObject;\n}\n\nfunction proxySet(initialValues) {\n  const set = proxy({\n    data: Array.from(new Set(initialValues)),\n    has(value) {\n      return this.data.indexOf(value) !== -1;\n    },\n    add(value) {\n      let hasProxy = false;\n      if (typeof value === \"object\" && value !== null) {\n        hasProxy = this.data.indexOf(proxy(value)) !== -1;\n      }\n      if (this.data.indexOf(value) === -1 && !hasProxy) {\n        this.data.push(value);\n      }\n      return this;\n    },\n    delete(value) {\n      const index = this.data.indexOf(value);\n      if (index === -1) {\n        return false;\n      }\n      this.data.splice(index, 1);\n      return true;\n    },\n    clear() {\n      this.data.splice(0);\n    },\n    get size() {\n      return this.data.length;\n    },\n    forEach(cb) {\n      this.data.forEach((value) => {\n        cb(value, value, this);\n      });\n    },\n    get [Symbol.toStringTag]() {\n      return \"Set\";\n    },\n    toJSON() {\n      return new Set(this.data);\n    },\n    [Symbol.iterator]() {\n      return this.data[Symbol.iterator]();\n    },\n    values() {\n      return this.data.values();\n    },\n    keys() {\n      return this.data.values();\n    },\n    entries() {\n      return new Set(this.data).entries();\n    }\n  });\n  Object.defineProperties(set, {\n    data: {\n      enumerable: false\n    },\n    size: {\n      enumerable: false\n    },\n    toJSON: {\n      enumerable: false\n    }\n  });\n  Object.seal(set);\n  return set;\n}\n\nfunction proxyMap(entries) {\n  const map = proxy({\n    data: Array.from(entries || []),\n    has(key) {\n      return this.data.some((p) => p[0] === key);\n    },\n    set(key, value) {\n      const record = this.data.find((p) => p[0] === key);\n      if (record) {\n        record[1] = value;\n      } else {\n        this.data.push([key, value]);\n      }\n      return this;\n    },\n    get(key) {\n      var _a;\n      return (_a = this.data.find((p) => p[0] === key)) == null ? void 0 : _a[1];\n    },\n    delete(key) {\n      const index = this.data.findIndex((p) => p[0] === key);\n      if (index === -1) {\n        return false;\n      }\n      this.data.splice(index, 1);\n      return true;\n    },\n    clear() {\n      this.data.splice(0);\n    },\n    get size() {\n      return this.data.length;\n    },\n    toJSON() {\n      return new Map(this.data);\n    },\n    forEach(cb) {\n      this.data.forEach((p) => {\n        cb(p[1], p[0], this);\n      });\n    },\n    keys() {\n      return this.data.map((p) => p[0]).values();\n    },\n    values() {\n      return this.data.map((p) => p[1]).values();\n    },\n    entries() {\n      return new Map(this.data).entries();\n    },\n    get [Symbol.toStringTag]() {\n      return \"Map\";\n    },\n    [Symbol.iterator]() {\n      return this.entries();\n    }\n  });\n  Object.defineProperties(map, {\n    data: {\n      enumerable: false\n    },\n    size: {\n      enumerable: false\n    },\n    toJSON: {\n      enumerable: false\n    }\n  });\n  Object.seal(map);\n  return map;\n}\n\nexport { addComputed_DEPRECATED as addComputed, devtools, proxyMap, proxySet, proxyWithComputed_DEPRECATED as proxyWithComputed, proxyWithHistory_DEPRECATED as proxyWithHistory, subscribeKey, watch };\n", "import { useLayoutEffect } from 'react';\nimport { useSnapshot } from 'valtio/react';\n\nconst DUMMY_SYMBOL = Symbol();\nfunction useProxy(proxy, options) {\n  const snapshot = useSnapshot(proxy, options);\n  snapshot[DUMMY_SYMBOL];\n  let isRendering = true;\n  useLayoutEffect(() => {\n    isRendering = false;\n  });\n  return new Proxy(proxy, {\n    get(target, prop) {\n      return isRendering ? snapshot[prop] : target[prop];\n    }\n  });\n}\n\nexport { useProxy };\n"],
  "mappings": "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",
  "names": ["sourceObjectMap", "WeakMap", "derivedObjectMap", "markPending", "sourceObject", "callback", "sourceObjectEntry", "get", "forEach", "subscription", "d", "derivedObject", "add", "unmarkPending", "clear", "addSubscription", "s", "derivedObjectEntry", "Set", "set", "subscriptions", "unsubscribe", "subscribe", "ops", "c", "n", "notifyInSync", "i", "ignoreKeys", "every", "op", "length", "includes", "p", "Promise", "resolve", "then", "removeSubscription", "delete", "size", "listSubscriptions", "Array", "from", "unstable_deriveSubscriptions", "remove", "list", "derive", "derivedFns", "options", "proxyObject", "proxy", "sync", "derivedKeys", "Object", "keys", "key", "getOwnPropertyDescriptor", "Error", "fn", "lastDependencies", "evaluate", "map", "checkPending", "some", "isPending", "entry", "getVersion", "v", "dependencies", "Map", "value", "subscribeToDependencies", "_lastDependencies2", "_lastDependencies", "lastSubscription", "k", "has", "finally", "underive", "keysToDelete", "proxy", "snapshot"]
}
